apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: chainsaw-gmpmetrics-role
rules:
  - apiGroups: [""]
    resources: ["pods", "namespaces", "nodes"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources: ["replicasets"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: chainsaw-gmpmetrics-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chainsaw-gmpmetrics-role
subjects:
- kind: ServiceAccount
  name: chainsaw-gmpmetrics-sa
  namespace: chainsaw-gmpmetrics

---
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: gmp
  namespace: chainsaw-gmpmetrics
spec:
  serviceAccount: chainsaw-gmpmetrics-sa
  env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: "/etc/workload-identity/credential-configuration.json"

  volumeMounts:
    - name: service-account-token-volume
      mountPath: "/var/run/secrets/otel/serviceaccount"
      readOnly: true
    - name: workload-identity-credential-configuration
      mountPath: "/etc/workload-identity"
      readOnly: true

  volumes:
    - name: service-account-token-volume
      projected:
        sources:
        - serviceAccountToken:
            audience: "openshift"
            expirationSeconds: 3600
            path: token
    - name: workload-identity-credential-configuration
      configMap:
        name: gcp-wif-credentials
 
  config:
    exporters:
      otlphttp:
        encoding: json
        endpoint: https://telemetry.googleapis.com
        auth:
          authenticator: googleclientauth

    extensions:
      health_check:
        endpoint: "0.0.0.0:13133"
      googleclientauth:
        project: "openshift-qe"

    processors:
      resource/set_gcp_defaults:
        attributes:
        - action: insert
          value: "openshift-qe"
          key: gcp.project_id
        - action: insert
          value: "us-central1"
          key: location
        - action: insert
          value: "ikanse-12-7lnxm"
          key: cluster

      batch:
        send_batch_max_size: 200
        send_batch_size: 200
        timeout: 5s

      k8sattributes:
        extract:
          metadata:
          - k8s.namespace.name
          - k8s.deployment.name
          - k8s.statefulset.name
          - k8s.daemonset.name
          - k8s.cronjob.name
          - k8s.job.name
          - k8s.node.name
          - k8s.pod.name
          - k8s.pod.uid
          - k8s.pod.start_time
        passthrough: false
        pod_association:
        - sources:
          - from: resource_attribute
            name: k8s.pod.ip
        - sources:
          - from: resource_attribute
            name: k8s.pod.uid
        - sources:
          - from: connection

      memory_limiter:
        check_interval: 1s
        limit_percentage: 65
        spike_limit_percentage: 20

      # This transform processor avoids ingestion errors if metrics contain attributes with names that are reserved for the prometheus_target resource.
      transform/collision:
        metric_statements:
        - context: datapoint
          statements:
          - set(attributes["exported_location"], attributes["location"])
          - delete_key(attributes, "location")
          - set(attributes["exported_cluster"], attributes["cluster"])
          - delete_key(attributes, "cluster")
          - set(attributes["exported_namespace"], attributes["namespace"])
          - delete_key(attributes, "namespace")
          - set(attributes["exported_job"], attributes["job"])
          - delete_key(attributes, "job")
          - set(attributes["exported_instance"], attributes["instance"])
          - delete_key(attributes, "instance")
          - set(attributes["exported_project_id"], attributes["project_id"])
          - delete_key(attributes, "project_id")


    receivers:
      otlp:
        protocols:
          grpc: {}
          http: {}

    service:
      extensions:
      - health_check
      - googleclientauth
      pipelines:
        metrics/otlp:
          exporters:
          - otlphttp
          processors:
          - k8sattributes
          - memory_limiter
          - resource/set_gcp_defaults
          - transform/collision
          - batch
          receivers:
          - otlp
